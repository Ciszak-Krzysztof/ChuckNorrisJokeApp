{"version":3,"sources":["components/Layout/SaveJokes.module.css","components/Layout/JokeForm.module.css","components/Layout/Image.module.css","components/UI/Card.module.css","components/Layout/Joke.module.css","components/UI/Card.tsx","assets/Chuck Norris photo@3x.png","assets/Random photo@3x.png","components/Layout/Image.tsx","components/Layout/Joke.tsx","components/Layout/JokeForm.tsx","components/Layout/SaveJokes.tsx","App.tsx","index.tsx"],"names":["module","exports","Card","props","className","classes","card","children","Photo","jokeName","imageChuck","imageUnknown","src","ChuckImage","unknownImage","alt","Joke","joke","JokeForm","useState","category","setCategory","firstName","setFirstName","lastName","setLastName","isTouched","setIsTouched","fetchUrl","fetchUrlCategory","onSubmit","event","preventDefault","a","fetch","length","response","ok","Error","json","responseData","value","replace","onDrawJoke","fetchJoke","catch","error","console","log","message","onDrawImage","onChange","target","defaultValue","form","select","gray","disabled","split","placeholder","input","button","SaveJokes","jokesAmount","setJokesAmount","jokeArray","setJokeArray","flex","span","errorBox","roundButton","activeButton","onClick","prevAmount","type","min","active","App","chuckJoke","setChuckJoke","isChuck","setIsChuck","useEffect","Image","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9fcb91d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex\":\"SaveJokes_flex__Bcx7o\",\"span\":\"SaveJokes_span__IlCqP\",\"button\":\"SaveJokes_button__HQq7t\",\"active\":\"SaveJokes_active__snI5n\",\"roundButton\":\"SaveJokes_roundButton__3J17g\",\"activeButton\":\"SaveJokes_activeButton__17rXl\",\"input\":\"SaveJokes_input__3OZKR\",\"error\":\"SaveJokes_error__IBD8b\",\"errorBox\":\"SaveJokes_errorBox__1Rt2W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"JokeForm_form__SWjID\",\"button\":\"JokeForm_button__3AWl-\",\"gray\":\"JokeForm_gray__3sBgM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageChuck\":\"Image_imageChuck__3z6aW\",\"imageUnknown\":\"Image_imageUnknown__Jb3E0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"joke\":\"Joke_joke__Zah5I\"};","import classes from \"./Card.module.css\";\n\nconst Card: React.FC = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","export default __webpack_public_path__ + \"static/media/Chuck Norris photo@3x.3e697d6b.png\";","export default __webpack_public_path__ + \"static/media/Random photo@3x.a3117705.png\";","import ChuckImage from \"../../assets/Chuck Norris photo@3x.png\";\nimport unknownImage from \"../../assets/Random photo@3x.png\";\nimport classes from \"./Image.module.css\";\n\nconst Photo: React.FC<{ jokeName: boolean }> = (props) => {\n  return (\n    <div>\n      <img\n        className={props.jokeName ? classes.imageChuck : classes.imageUnknown}\n        src={props.jokeName ? ChuckImage : unknownImage}\n        alt=\"chuck\"\n      />\n      <p>{props.jokeName}</p>\n    </div>\n  );\n};\n\nexport default Photo;\n","import classes from \"./Joke.module.css\";\n\nconst Joke: React.FC<{ joke: string }> = (props) => {\n  return <div className={classes.joke}>{props.joke}</div>;\n};\n\nexport default Joke;\n","import { useState } from \"react\";\nimport classes from \"./JokeForm.module.css\";\n\nconst JokeForm: React.FC<{\n  onDrawJoke: React.Dispatch<React.SetStateAction<string>>;\n  onDrawImage: React.Dispatch<React.SetStateAction<boolean>>;\n}> = (props) => {\n  const [category, setCategory] = useState<string>(\"\");\n  const [firstName, setFirstName] = useState<string>(\"Chuck\");\n  const [lastName, setLastName] = useState<string>(\"Norris\");\n  const [isTouched, setIsTouched] = useState<boolean>(false);\n\n  const selectCategoryHandler = (\n    event: React.ChangeEvent<HTMLSelectElement>\n  ) => {\n    setCategory(event.target.value);\n  };\n\n  const isChuckHandler = () => {\n    if (`${firstName} ${lastName}` !== \"Chuck Norris\") {\n      props.onDrawImage(false);\n    } else {\n      props.onDrawImage(true);\n    }\n  };\n\n  const inputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setFirstName(event.target.value.split(\" \")[0]);\n    if (event.target.value.split(\" \")[1]) {\n      setLastName(event.target.value.split(\" \")[1]);\n    } else {\n      setLastName(\"\");\n    }\n    setIsTouched(true);\n    if (event.target.value.length === 0) {\n      setFirstName(\"Chuck\");\n      setLastName(\"Norris\");\n      setIsTouched(false);\n    }\n  };\n\n  const fetchUrl: string = `https://api.icndb.com/jokes/random?firstName=${firstName}&lastName=${lastName}`;\n  const fetchUrlCategory: string = `${fetchUrl}&limitTo=[${category}]`;\n\n  const onSubmitHandler = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const fetchJoke = async () => {\n      const response: Response = await fetch(\n        category.length === 0 ? fetchUrl : fetchUrlCategory\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const responseData = await response.json();\n      const joke = responseData.value.joke.replace(/&quot;/g, '\"');\n\n      props.onDrawJoke(joke);\n    };\n\n    fetchJoke().catch((error) => {\n      console.log(error.message);\n    });\n\n    isChuckHandler();\n  };\n\n  return (\n    <form onSubmit={onSubmitHandler}>\n      <div>\n        <select\n          onChange={selectCategoryHandler}\n          defaultValue=\"select\"\n          className={`${classes.form} ${classes.select} ${\n            category === \"\" ? classes.gray : \"\"\n          }`}\n        >\n          <option value=\"select\" disabled>\n            Select category\n          </option>\n          <option value=\"explicit\">Explicit</option>\n          <option value=\"nerdy\">Nerdy</option>\n        </select>\n        <input\n          onChange={inputHandler}\n          placeholder=\"Impersonate Chuck Norris\"\n          className={`${classes.form} ${classes.input} ${\n            !isTouched ? classes.gray : \"\"\n          }`}\n        ></input>\n      </div>\n      <button className={`${classes.form} ${classes.button}`}>\n        Draw a random {`${firstName} ${lastName}`} Joke\n      </button>\n    </form>\n  );\n};\n\nexport default JokeForm;\n","import { useState } from \"react\";\nimport classes from \"./SaveJokes.module.css\";\n\nconst SaveJokes: React.FC = () => {\n  const [jokesAmount, setJokesAmount] = useState<number>(0);\n  const [jokeArray, setJokeArray] = useState([]);\n\n  const decrementInput = () => {\n    setJokesAmount((prevAmount) => {\n      return prevAmount - 1;\n    });\n  };\n\n  const incrementInput = () => {\n    setJokesAmount((prevAmount) => {\n      return prevAmount + 1;\n    });\n  };\n\n  const inputHandler = (event: any) => {\n    setJokesAmount(event.target.value);\n  };\n\n  const fetchUrl: string = `https://api.icndb.com/jokes/random/${jokesAmount}`;\n\n  const onSaveHandler = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const fetchJoke = async () => {\n      const response = await fetch(fetchUrl);\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n      const responseData = await response.json();\n\n      setJokeArray(responseData.value);\n      // console.log(responseData);\n      // console.log(responseData.value);\n    };\n    fetchJoke().catch((error) => {\n      console.log(error.message);\n    });\n  };\n  console.log(jokeArray);\n\n  return (\n    <div>\n      <div className={classes.flex}>\n        <span\n          className={`${classes.span} ${\n            jokesAmount < 0 || jokesAmount > 100 ? classes.errorBox : \"\"\n          }`}\n        >\n          <button\n            className={`${classes.roundButton} ${\n              jokesAmount !== 0 ? classes.activeButton : \"\"\n            }`}\n            onClick={decrementInput}\n          >\n            -\n          </button>\n          <input\n            type=\"number\"\n            min={0}\n            className={classes.input}\n            value={jokesAmount}\n            onChange={inputHandler}\n          />\n          <button\n            className={`${classes.roundButton} ${\n              jokesAmount !== 0 ? classes.activeButton : \"\"\n            }`}\n            onClick={incrementInput}\n          >\n            +\n          </button>\n        </span>\n        <button\n          className={`${classes.button} ${\n            jokesAmount > 0 && jokesAmount <= 100 ? classes.active : \"\"\n          } `}\n          onClick={onSaveHandler}\n        >\n          Save Jokes\n        </button>\n      </div>\n      {jokesAmount < 0 || jokesAmount > 100 ? (\n        <p className={classes.error}>You can pick a number from 1 to 100.</p>\n      ) : null}\n    </div>\n  );\n};\n\nexport default SaveJokes;\n","import Card from \"./components/UI/Card\";\nimport Image from \"./components/Layout/Image\";\nimport Joke from \"./components/Layout/Joke\";\nimport JokeForm from \"./components/Layout/JokeForm\";\nimport SaveJokes from \"./components/Layout/SaveJokes\";\nimport { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [chuckJoke, setChuckJoke] = useState<string>(\"\");\n  const [isChuck, setIsChuck] = useState<boolean>(true);\n\n  useEffect(() => {\n    const fetchJoke = async () => {\n      const response = await fetch(\"https://api.icndb.com/jokes/random\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const responseData = await response.json();\n\n      const joke = responseData.value.joke.replace(/&quot;/g, '\"');\n\n      setChuckJoke(joke);\n    };\n\n    fetchJoke().catch((error) => {\n      console.log(error.message);\n      setChuckJoke(\n        \"Something went wrong and we were not able to fetch joke for you\"\n      );\n    });\n  }, []);\n\n  return (\n    <Card>\n      <Image jokeName={isChuck} />\n      <Joke joke={chuckJoke} />\n      <JokeForm onDrawJoke={setChuckJoke} onDrawImage={setIsChuck} />\n      <SaveJokes />\n    </Card>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}